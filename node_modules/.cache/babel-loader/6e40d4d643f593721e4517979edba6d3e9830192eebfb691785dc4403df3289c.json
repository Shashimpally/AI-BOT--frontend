{"ast":null,"code":"var _jsxFileName = \"E:\\\\chat\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    try {\n      var _data$choices, _data$choices$, _data$choices$$messag;\n      const res = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer YOUR_OPENAI_API_KEY` // Replace with your API key\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'user',\n            content: input\n          }]\n        })\n      });\n      const data = await res.json();\n      const botReply = ((_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$messag = _data$choices$.message) === null || _data$choices$$messag === void 0 ? void 0 : _data$choices$$messag.content) || 'ü§ñ Error replying';\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: botReply\n      }]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        role: 'bot',\n        content: '‚ö†Ô∏è Error fetching response'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chatbot-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Neon AI Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.role}`,\n        children: msg.content\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        placeholder: \"Ask me anything...\",\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","role","content","_data$choices","_data$choices$","_data$choices$$messag","res","fetch","method","headers","body","JSON","stringify","model","data","json","botReply","choices","message","prev","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","type","value","placeholder","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["E:/chat/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nconst ChatBot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { role: 'user', content: input };\n    setMessages([...messages, userMessage]);\n    setInput('');\n\n    try {\n      const res = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer YOUR_OPENAI_API_KEY`, // Replace with your API key\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{ role: 'user', content: input }],\n        }),\n      });\n\n      const data = await res.json();\n      const botReply = data.choices?.[0]?.message?.content || 'ü§ñ Error replying';\n\n      setMessages((prev) => [...prev, { role: 'bot', content: botReply }]);\n    } catch (error) {\n      setMessages((prev) => [...prev, { role: 'bot', content: '‚ö†Ô∏è Error fetching response' }]);\n    }\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <header className=\"chatbot-header\">\n        <h1>Neon AI Bot</h1>\n      </header>\n\n      <div className=\"chat-window\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`chat-message ${msg.role}`}>\n            {msg.content}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={input}\n          placeholder=\"Ask me anything...\"\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}